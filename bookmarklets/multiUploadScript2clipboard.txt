javascript:(function()%7Bfunction domplate() %7Bvar output %3D %60var gi %3D (o%2C s) %3D> o %3F o.getElementById(s) %3A console.log(o)%3B%5Cnvar ele %3D (t) %3D> document.createElement(t)%3B%5Cnvar attr %3D (o%2C k%2C v) %3D> o.setAttribute(k%2C v)%3B%5Cn%5Cnfunction createUploadHTML()%7B%5Cn%5Cnif(gi(document%2C'pop_FileUploader')) gi(document%2C'pop_FileUploader').outerHTML %3D ''%3B%5Cn%5Cnvar popCont %3D ele("div")%3B%5Cndocument.body.appendChild(popCont)%3B%5Cnattr(popCont%2C "id"%2C "pop_FileUploader")%3B%5Cnattr(popCont%2C 'style'%2C'position%3A fixed%3B top%3A 20%25%3B left%3A 50%25%3B width%3A 280px%3B height%3A 100px%3B background%3A lightgrey%3B border%3A 1px solid %23616161%3B border-radius%3A .5em%3B padding%3A 6px%3B z-index%3A 12000%3B')%3B%5Cn%5Cnvar closeBtn %3D ele("div")%3B%5Cnattr(closeBtn%2C "id"%2C "note_btn_close")%3B%5Cnattr(closeBtn%2C 'style'%2C'background%3A transparent%3B width%3A 15px%3B height%3A 15px%3B transform%3A scale(1.8%2C 1.2)%3B border-radius%3A 1em%3B padding%3A 0px%3B color%3A Crimson%3B cursor%3A pointer')%3B%5CnpopCont.appendChild(closeBtn)%3B%5CncloseBtn.innerText %3D "X"%3B%5CncloseBtn.addEventListener("click"%2C close)%3B%5Cn%5Cnvar uploadElm %3D ele("input")%3B%5Cnattr(uploadElm%2C "id"%2C "customFileInput")%3B%5Cnattr(uploadElm%2C "type"%2C "file")%3B%5Cnattr(uploadElm%2C "name"%2C "file%5B%5D")%3B%5Cnattr(uploadElm%2C "multiple"%2C "true")%3B%5CnpopCont.appendChild(uploadElm)%3B%5CnuploadElm.style.transform %3D "scale(1.1%2C 1.1) translate(5%25%2C 80%25)"%3B%5CnuploadElm.addEventListener("change"%2C handleFiles)%3B%5Cn%5Cnfunction close() %7B%5Cn  document.body.removeChild(popCont)%3B%5Cn%7D%5Cn%7D%5Cn%5CncreateUploadHTML()%3B%5Cn%5Cnvar fileArray %3D %5B%5D%3B%5Cnvar textFile %3D ''%3B%5Cn%5Cnvar loadHandleJson %3D (e) %3D> Array.isArray(JSON.parse(e.target.result)) %3F JSON.parse(e.target.result).forEach(i%3D> fileArray.push(i)) %3A fileArray.push(JSON.parse(e.target.result))%3B%5Cnvar loadHandleText %3D (e) %3D> textFile %3D textFile %2B e.target.result%3B%5Cn%5Cnasync function handleFiles() %7B%5Cn  var files %3D this.files%3B%5Cn  for(var i%3D0%3B i<files.length%3B i%2B%2B)%7B%5Cn    await getAsText(files%5Bi%5D)%3B%5Cn  %7D%5Cn  gi(document%2C'pop_FileUploader').outerHTML %3D ''%3B%5Cn%7D%5Cn%5Cnfunction getAsText(f) %7B%5Cn  var reader %3D new FileReader()%3B%5Cn  reader.readAsText(f)%3B%5Cn  if(%2F.json%2Fi.test(f.name))%5Cn    reader.onload %3D loadHandleJson%3B%5Cn  else%5Cn    reader.onload %3D loadHandleText%3B%5Cn%7D%5Cn%60%3Bvar el %3D document.createElement('textarea')%3Bdocument.body.appendChild(el)%3Bel.value %3D output%3Bel.select()%3Bdocument.execCommand('copy')%3Bel.outerHTML %3D ''%3B%7Ddomplate()%7D)()
